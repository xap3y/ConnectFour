plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm'
    id "com.github.johnrengelman.shadow" version "8.1.1"
    id 'org.jetbrains.kotlin.plugin.serialization' version '2.0.0'
}

group = 'eu.xap3y'
version = '0.1'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven { url 'https://jitpack.io' }
}

dependencies {
    compileOnly "com.destroystokyo.paper:paper-api:1.13.2-R0.1-SNAPSHOT"
    implementation 'com.github.xap3y:XaGUI:pre-0.4'
    implementation 'com.github.xap3y:xalib:v1.0.6'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "com.github.cryptomorin:XSeries:11.2.0"
    implementation 'org.incendo:cloud-annotations:2.0.0-rc.2'
    implementation 'org.incendo:cloud-bukkit:2.0.0-beta.8'
    implementation 'org.incendo:cloud-paper:2.0.0-beta.8'
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.7.1"
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
kotlin {
    jvmToolchain(8)
}

tasks {
    shadowJar {
        relocate 'com.cryptomorin.xseries', 'eu.xap3y.connectfour.xseries'
    }
    shadowJar {
        relocate 'eu.xap3y.xagui', 'eu.xap3y.connectfour.xagui'
    }
}